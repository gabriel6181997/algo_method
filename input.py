###### 入力を受け取る（beta） ######

##### 複数の入力を受け取る #####

###2-3###
# 2 つの正の整数 A,B が空白区切りで入力されます。A と B のうち一の位が小さい方の値を出力してください。

# ただし、A と B の一の位は異なることが保証されています。

# 補足
# 整数の一の位はその数を 10 で割った余りと等しいです。
# たとえば 17 の一の位は 7 ですが、これは 17 を 10 で割った余りと一致します。

A,B = map(int,input().split())
if A%10 < B%10:
    print(A)
else:
    print(B)

###2-5###
# 3 つの整数 A,B,C が空白区切りで入力されます。3 つの整数の平均値を整数で出力してください。
#ただし、答えは整数になることが保証されています。

A,B,C = map(int,input().split())
print(round((A+B+C)/3))  ## ここでは、round() を使って結果を整数にする。

###2-6###
#4 つの正の整数 A,B,C,D が空白区切りで入力されます。4 つの整数の最大値を出力してください。

A,B,C,D = map(int,input().split())
list = [A,B,C,D]
print(max(list))

###2-7###
#2 つの文字列 S,T が改行区切りで入力されます。S と T が等しい文字列であるかを判定してください。

S = input()
T = input()  ## 改行が必要なため、S、Tを分けて入力する。
if S == T:
    print("Yes")
else:
    print("No")

###2-8###
#3 つの文字列 S, T, U が改行区切りで入力されます。U と T と S をこの順につなげた文字列を出力してください。

S = input()
T = input()
U = input()
print(U+T+S) ## +を使って文字列を結合する

### 2-10 ###
# 文字列 S が 1 行目に、2 つの正の整数 N,M が空白区切りで 2 行目に入力されます。 S の前からN番目の文字と、前からM番目の文字を入れ替えた文字列を出力してください。
# ただしここでは、文字列 S の先頭の文字は 1 文字目であるとします。

S = input()
N,M = map(int,input().split())
S_list = list(S)  ## Sをリストに変換する
tmp = S_list[N-1] ## 一時変数にS_list[N-1]を代入する
S_list[N-1] = S_list[M-1] ## 一時的にS_list[M-1]に代入する
S_list[M-1] = tmp
S = "".join(S_list) ## S_listを文字列に変換する
print(S)

